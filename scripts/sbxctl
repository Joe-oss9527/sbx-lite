#!/usr/bin/env bash
set -euo pipefail

ROOT=/opt/sbx
PANEL=$ROOT/panel
CONF_YML=/etc/sbx/sbx.yml

usage() {
cat <<'EOF'
sbxctl <cmd>

Core:
  apply                 Generate config, check, restart sing-box
  enable <reality|ws|hy2>
  disable <reality|ws|hy2>

Users:
  user-add <name>
  user-rm <name>
  user-enable <name>
  user-disable <name>
  user-rotate <name>

Network & CF:
  sethost <host>
  sethost-auto
  cf <proxied|direct>
  setdomain <domain>

Keys:
  reality-keys          Ensure REALITY keypair present

Diag:
  doctor                Run diagnose.sh
EOF
}

cmd=${1:-}
arg1=${2:-}

case "$cmd" in
  apply)
    node "$PANEL/gen-config.js"
    sing-box check -c /etc/sing-box/config.json
    systemctl restart sing-box
    ;;
  enable)
    case "$arg1" in
      reality) node "$PANEL/cmd.js" enable reality ;;
      ws) node "$PANEL/cmd.js" enable vless_ws_tls ;;
      hy2) node "$PANEL/cmd.js" enable hysteria2 ;;
      *) usage; exit 1;;
    esac
    ;;
  disable)
    case "$arg1" in
      reality) node "$PANEL/cmd.js" disable reality ;;
      ws) node "$PANEL/cmd.js" disable vless_ws_tls ;;
      hy2) node "$PANEL/cmd.js" disable hysteria2 ;;
      *) usage; exit 1;;
    esac
    ;;
  user-add) node "$PANEL/cmd.js" user-add "${arg1:?name required}" ;;
  user-rm) node "$PANEL/cmd.js" user-rm "${arg1:?name required}" ;;
  user-enable) node "$PANEL/cmd.js" user-enable "${arg1:?name required}" ;;
  user-disable) node "$PANEL/cmd.js" user-disable "${arg1:?name required}" ;;
  user-rotate) node "$PANEL/cmd.js" user-rotate "${arg1:?name required}" ;;

  sethost) node "$PANEL/cmd.js" sethost "${arg1:?host required}" ;;
  sethost-auto) node "$PANEL/cmd.js" autodetect_host ;;
  cf) node "$PANEL/cmd.js" cf "${arg1:?proxied|direct}" ;;
  setdomain) node "$PANEL/cmd.js" setdomain "${arg1:?domain required}" ;;

  reality-keys) node "$PANEL/cmd.js" reality-keys ;;

  doctor) bash /opt/sbx/scripts/diagnose.sh ;;

  *) usage; exit 1;;
esac
